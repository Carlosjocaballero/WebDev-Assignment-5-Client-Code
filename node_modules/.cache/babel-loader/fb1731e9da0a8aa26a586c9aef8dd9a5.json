{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Documents\\\\College\\\\Web Dev\\\\WebDev-Assignment-5-Client-Code\\\\src\\\\components\\\\views\\\\CampusView.js\";\n/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  const {\n    campus\n  } = props;\n  // If there are no camps, display a message\n  // if(!campus.length){\n  //   return(\n  //   <div>\n  //     <p>There are no campuses.</p>\n  //     <Link to={`newcampus`}>\n  //       <button>Add New Campus</button>\n  //     </Link>\n  //   </div> \n  //   );\n  // }\n\n  // Render a single Campus view with list of its students\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl,\n      alt: campus.name,\n      style: {\n        width: 500,\n        height: 300\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), campus.studentcampus.students.map(student => {\n      let name = student.firstname + \" \" + student.lastname;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/student/${student.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CampusView;\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","CampusView","props","campus","name","imageUrl","width","height","address","description","studentcampus","students","map","student","firstname","lastname","id"],"sources":["C:/Users/carlo/OneDrive/Documents/College/Web Dev/WebDev-Assignment-5-Client-Code/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Take in props data to construct the component\r\nconst CampusView = (props) => {\r\n  const {campus} = props;\r\n  // If there are no camps, display a message\r\n  // if(!campus.length){\r\n  //   return(\r\n  //   <div>\r\n  //     <p>There are no campuses.</p>\r\n  //     <Link to={`newcampus`}>\r\n  //       <button>Add New Campus</button>\r\n  //     </Link>\r\n  //   </div> \r\n  //   );\r\n  // }\r\n  \r\n  // Render a single Campus view with list of its students\r\n  return (\r\n    <div>\r\n      <h1>{campus.name}</h1>\r\n      <img src={campus.imageUrl} alt={campus.name} style={{width: 500, height: 300}}></img>\r\n      <p>{campus.address}</p>\r\n      <p>{campus.description}</p>\r\n      \r\n      {campus.studentcampus.students.map( student => {\r\n        let name = student.firstname + \" \" + student.lastname;\r\n        return (\r\n          <div key={student.id}>\r\n            <Link to={`/student/${student.id}`}>\r\n              <h2>{name}</h2>\r\n            </Link>             \r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampusView;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA;AACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAACC;EAAM,CAAC,GAAGD,KAAK;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE;IAAA,wBACE;MAAA,UAAKC,MAAM,CAACC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,GAAG,EAAED,MAAM,CAACE,QAAS;MAAC,GAAG,EAAEF,MAAM,CAACC,IAAK;MAAC,KAAK,EAAE;QAACE,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eACrF;MAAA,UAAIJ,MAAM,CAACK;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAA,UAAIL,MAAM,CAACM;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,EAE1BN,MAAM,CAACO,aAAa,CAACC,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAI;MAC7C,IAAIT,IAAI,GAAGS,OAAO,CAACC,SAAS,GAAG,GAAG,GAAGD,OAAO,CAACE,QAAQ;MACrD,oBACE;QAAA,uBACE,QAAC,IAAI;UAAC,EAAE,EAAG,YAAWF,OAAO,CAACG,EAAG,EAAE;UAAA,uBACjC;YAAA,UAAKZ;UAAI;YAAA;YAAA;YAAA;UAAA;QAAM;UAAA;UAAA;UAAA;QAAA;MACV,GAHCS,OAAO,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAId;IAEV,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAlCIf,UAAU;AAoChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}