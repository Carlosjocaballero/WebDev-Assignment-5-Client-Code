{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Documents\\\\College\\\\Web Dev\\\\WebDev-Assignment-5-Client-Code\\\\src\\\\components\\\\views\\\\AllCampusesView.js\";\n/*==================================================\r\nAllCampusesView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display all campuses.\r\n================================================== */\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { deleteCampus } from \"../../store/actions/actionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCampusesView = props => {\n  const {\n    campuses,\n    deleteCampus\n  } = props;\n  // If there is no campus, display a message.\n  if (!props.allCampuses.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There are no campuses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If there is at least one campus, render All Campuses view \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Campuses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), props.allCampuses.map(campus => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/campus/${campus.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: campus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: campus.imageUrl,\n        alt: \"School\",\n        style: {\n          width: 500,\n          height: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"campus id: \", campus.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteCampus(campus.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, campus.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n// Validate data type of the props passed to component.\n_c = AllCampusesView;\nAllCampusesView.propTypes = {\n  allCampuses: PropTypes.array.isRequired\n};\nexport default AllCampusesView;\nvar _c;\n$RefreshReg$(_c, \"AllCampusesView\");","map":{"version":3,"names":["PropTypes","Link","deleteCampus","AllCampusesView","props","campuses","allCampuses","length","map","campus","id","name","imageUrl","width","height","address","description","propTypes","array","isRequired"],"sources":["C:/Users/carlo/OneDrive/Documents/College/Web Dev/WebDev-Assignment-5-Client-Code/src/components/views/AllCampusesView.js"],"sourcesContent":["/*==================================================\r\nAllCampusesView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display all campuses.\r\n================================================== */\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteCampus } from \"../../store/actions/actionCreators\";\r\n\r\nconst AllCampusesView = (props) => {\r\n  const {campuses, deleteCampus} = props;\r\n  // If there is no campus, display a message.\r\n  if (!props.allCampuses.length) {\r\n    return <div>There are no campuses.</div>;\r\n  }\r\n\r\n  // If there is at least one campus, render All Campuses view \r\n  return (\r\n    <div>\r\n      <h1>All Campuses</h1>\r\n\r\n      {props.allCampuses.map((campus) => (\r\n        <div key={campus.id}>\r\n          <Link to={`/campus/${campus.id}`}>\r\n            <h2>{campus.name}</h2>\r\n          </Link>\r\n          <img src={campus.imageUrl} alt=\"School\" style={{width: 500, height: 300}}></img>\r\n          <h4>campus id: {campus.id}</h4>\r\n          <p>{campus.address}</p>\r\n          <p>{campus.description}</p>\r\n          <button onClick={() => deleteCampus(campus.id)}>Delete</button>\r\n          <hr/>\r\n        </div>\r\n      ))}\r\n      <br/>\r\n      <Link to={`/`}>\r\n        <button>Add New Campus</button>\r\n      </Link>\r\n      <br/><br/>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Validate data type of the props passed to component.\r\nAllCampusesView.propTypes = {\r\n  allCampuses: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default AllCampusesView;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAY,QAAQ,oCAAoC;AAAC;AAElE,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,MAAM;IAACC,QAAQ;IAAEH;EAAY,CAAC,GAAGE,KAAK;EACtC;EACA,IAAI,CAACA,KAAK,CAACE,WAAW,CAACC,MAAM,EAAE;IAC7B,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiC;EAC1C;;EAEA;EACA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,EAEpBH,KAAK,CAACE,WAAW,CAACE,GAAG,CAAEC,MAAM,iBAC5B;MAAA,wBACE,QAAC,IAAI;QAAC,EAAE,EAAG,WAAUA,MAAM,CAACC,EAAG,EAAE;QAAA,uBAC/B;UAAA,UAAKD,MAAM,CAACE;QAAI;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QACjB,eACP;QAAK,GAAG,EAAEF,MAAM,CAACG,QAAS;QAAC,GAAG,EAAC,QAAQ;QAAC,KAAK,EAAE;UAACC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eAChF;QAAA,0BAAgBL,MAAM,CAACC,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/B;QAAA,UAAID,MAAM,CAACM;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eACvB;QAAA,UAAIN,MAAM,CAACO;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAQ,OAAO,EAAE,MAAMd,YAAY,CAACO,MAAM,CAACC,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eAC/D;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GATGD,MAAM,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAWpB,CAAC,eACF;MAAA;MAAA;MAAA;IAAA,QAAK,eACL,QAAC,IAAI;MAAC,EAAE,EAAG,GAAG;MAAA,uBACZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA+B;MAAA;MAAA;MAAA;IAAA,QAC1B,eACP;MAAA;MAAA;MAAA;IAAA,QAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;;AAED;AAAA,KAlCMP,eAAe;AAmCrBA,eAAe,CAACc,SAAS,GAAG;EAC1BX,WAAW,EAAEN,SAAS,CAACkB,KAAK,CAACC;AAC/B,CAAC;AAED,eAAehB,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}